{"remainingRequest":"/Users/Elliss/Development/soupcon.salon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Elliss/Development/soupcon.salon/src/components/CalendarMonth.vue?vue&type=style&index=0&id=2a57d0e2&scoped=true&lang=css&","dependencies":[{"path":"/Users/Elliss/Development/soupcon.salon/src/components/CalendarMonth.vue","mtime":1620139318326},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/css-loader/dist/cjs.js","mtime":1620301518315},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1622752007598},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/postcss-loader/src/index.js","mtime":1620301520095},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/cache-loader/dist/cjs.js","mtime":1620301518121},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/vue-loader/lib/index.js","mtime":1622752007598}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.calendar-month {\n  position: relative;\n  background-color: var(--grey-200);\n  border: solid 1px var(--grey-300);\n}\n\n.day-of-week {\n  color: var(--grey-800);\n  font-size: 18px;\n  background-color: #fff;\n  padding-bottom: 5px;\n  padding-top: 10px;\n}\n\n.day-of-week,\n.days-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n.day-of-week > * {\n  text-align: right;\n  padding-right: 5px;\n}\n\n.days-grid {\n  height: 100%;\n  position: relative;\n  grid-column-gap: var(--grid-gap);\n  grid-row-gap: var(--grid-gap);\n  border-top: solid 1px var(--grey-200);\n}\n",{"version":3,"sources":["CalendarMonth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CalendarMonth.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"calendar-month\">\n    <div class=\"calendar-month-header\">\n      <CalendarDateIndicator\n        :selected-date=\"selectedDate\"\n        class=\"calendar-month-header-selected-month\"\n      />\n\n      <CalendarDateSelector\n        :current-date=\"today\"\n        :selected-date=\"selectedDate\"\n        @dateSelected=\"selectDate\"\n      />\n    </div>\n\n    <CalendarWeekdays/>\n\n    <ol class=\"days-grid\">\n      <CalendarMonthDayItem\n        v-for=\"day in days\"\n        :key=\"day.date\"\n        :day=\"day\"\n        :is-today=\"day.date === today\"\n        :events=\"getEventsByDate(day.date)\"\n      />\n    </ol>\n  </div>\n</template>\n\n<script>\nimport dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\nimport CalendarDateSelector from \"./CalendarDateSelector\";\nimport CalendarWeekdays from \"./CalendarWeekdays\";\n\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\n\nexport default {\n  name: \"CalendarMonth\",\n\n  components: {\n    CalendarMonthDayItem,\n    CalendarDateIndicator,\n    CalendarDateSelector,\n    CalendarWeekdays\n  },\n\n  props: ['events'],\n\n  data() {\n    return {\n      selectedDate: dayjs()\n    };\n  },\n\n  computed: {\n    days() {\n      return [\n        ...this.previousMonthDays,\n        ...this.currentMonthDays,\n        ...this.nextMonthDays\n      ];\n    },\n\n    today() {\n      return dayjs().format(\"YYYY-MM-DD\");\n    },\n\n    month() {\n      return Number(this.selectedDate.format(\"M\"));\n    },\n\n    year() {\n      return Number(this.selectedDate.format(\"YYYY\"));\n    },\n\n    numberOfDaysInMonth() {\n      return dayjs(this.selectedDate).daysInMonth();\n    },\n\n    currentMonthDays() {\n      return [...Array(this.numberOfDaysInMonth)].map((day, index) => {\n        return {\n          date: dayjs(`${this.year}-${this.month}-${index + 1}`).format(\n            \"YYYY-MM-DD\"\n          ),\n          isCurrentMonth: true\n        };\n      });\n    },\n\n    previousMonthDays() {\n      const firstDayOfTheMonthWeekday = this.getWeekday(\n        this.currentMonthDays[0].date\n      );\n      const previousMonth = dayjs(`${this.year}-${this.month}-01`).subtract(\n        1,\n        \"month\"\n      );\n\n      // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\n      const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday\n        ? firstDayOfTheMonthWeekday - 1\n        : 6;\n\n      const previousMonthLastMondayDayOfMonth = dayjs(\n        this.currentMonthDays[0].date\n      )\n        .subtract(visibleNumberOfDaysFromPreviousMonth, \"day\")\n        .date();\n\n      return [...Array(visibleNumberOfDaysFromPreviousMonth)].map(\n        (day, index) => {\n          return {\n            date: dayjs(\n              `${previousMonth.year()}-${previousMonth.month() +\n                1}-${previousMonthLastMondayDayOfMonth + index}`\n            ).format(\"YYYY-MM-DD\"),\n            isCurrentMonth: false\n          };\n        }\n      );\n    },\n\n    nextMonthDays() {\n      const lastDayOfTheMonthWeekday = this.getWeekday(\n        `${this.year}-${this.month}-${this.currentMonthDays.length}`\n      );\n\n      const nextMonth = dayjs(`${this.year}-${this.month}-01`).add(1, \"month\");\n\n      const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\n        ? 7 - lastDayOfTheMonthWeekday\n        : lastDayOfTheMonthWeekday;\n\n      return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\n        return {\n          date: dayjs(\n            `${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`\n          ).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: false\n        };\n      });\n    }\n  },\n\n  methods: {\n    getWeekday(date) {\n      return dayjs(date).weekday();\n    },\n\n    getEventsByDate(date) {      \n      const result = this.events.filter(event => dayjs(event.date).format('YYYY-MM-DD') === date)\n      return result\n    },\n\n    selectDate(newSelectedDate) {\n      this.selectedDate = newSelectedDate;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.calendar-month {\n  position: relative;\n  background-color: var(--grey-200);\n  border: solid 1px var(--grey-300);\n}\n\n.day-of-week {\n  color: var(--grey-800);\n  font-size: 18px;\n  background-color: #fff;\n  padding-bottom: 5px;\n  padding-top: 10px;\n}\n\n.day-of-week,\n.days-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n.day-of-week > * {\n  text-align: right;\n  padding-right: 5px;\n}\n\n.days-grid {\n  height: 100%;\n  position: relative;\n  grid-column-gap: var(--grid-gap);\n  grid-row-gap: var(--grid-gap);\n  border-top: solid 1px var(--grey-200);\n}\n</style>\n"]}]}