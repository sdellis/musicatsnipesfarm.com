{"remainingRequest":"/Users/Elliss/Development/soupcon.salon/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/Elliss/Development/soupcon.salon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Elliss/Development/soupcon.salon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Elliss/Development/soupcon.salon/src/components/CalendarMonth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Elliss/Development/soupcon.salon/src/components/CalendarMonth.vue","mtime":1620139318326},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/cache-loader/dist/cjs.js","mtime":1620301518121},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/babel-loader/lib/index.js","mtime":1620301517964},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/cache-loader/dist/cjs.js","mtime":1620301518121},{"path":"/Users/Elliss/Development/soupcon.salon/node_modules/vue-loader/lib/index.js","mtime":1670880272593}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/Elliss/Development/soupcon.salon/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\nimport CalendarDateSelector from \"./CalendarDateSelector\";\nimport CalendarWeekdays from \"./CalendarWeekdays\";\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\nexport default {\n  name: \"CalendarMonth\",\n  components: {\n    CalendarMonthDayItem: CalendarMonthDayItem,\n    CalendarDateIndicator: CalendarDateIndicator,\n    CalendarDateSelector: CalendarDateSelector,\n    CalendarWeekdays: CalendarWeekdays\n  },\n  props: ['events'],\n  data: function data() {\n    return {\n      selectedDate: dayjs()\n    };\n  },\n  computed: {\n    days: function days() {\n      return [].concat(_toConsumableArray(this.previousMonthDays), _toConsumableArray(this.currentMonthDays), _toConsumableArray(this.nextMonthDays));\n    },\n    today: function today() {\n      return dayjs().format(\"YYYY-MM-DD\");\n    },\n    month: function month() {\n      return Number(this.selectedDate.format(\"M\"));\n    },\n    year: function year() {\n      return Number(this.selectedDate.format(\"YYYY\"));\n    },\n    numberOfDaysInMonth: function numberOfDaysInMonth() {\n      return dayjs(this.selectedDate).daysInMonth();\n    },\n    currentMonthDays: function currentMonthDays() {\n      var _this = this;\n\n      return _toConsumableArray(Array(this.numberOfDaysInMonth)).map(function (day, index) {\n        return {\n          date: dayjs(\"\".concat(_this.year, \"-\").concat(_this.month, \"-\").concat(index + 1)).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: true\n        };\n      });\n    },\n    previousMonthDays: function previousMonthDays() {\n      var firstDayOfTheMonthWeekday = this.getWeekday(this.currentMonthDays[0].date);\n      var previousMonth = dayjs(\"\".concat(this.year, \"-\").concat(this.month, \"-01\")).subtract(1, \"month\"); // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\n\n      var visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday ? firstDayOfTheMonthWeekday - 1 : 6;\n      var previousMonthLastMondayDayOfMonth = dayjs(this.currentMonthDays[0].date).subtract(visibleNumberOfDaysFromPreviousMonth, \"day\").date();\n      return _toConsumableArray(Array(visibleNumberOfDaysFromPreviousMonth)).map(function (day, index) {\n        return {\n          date: dayjs(\"\".concat(previousMonth.year(), \"-\").concat(previousMonth.month() + 1, \"-\").concat(previousMonthLastMondayDayOfMonth + index)).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: false\n        };\n      });\n    },\n    nextMonthDays: function nextMonthDays() {\n      var lastDayOfTheMonthWeekday = this.getWeekday(\"\".concat(this.year, \"-\").concat(this.month, \"-\").concat(this.currentMonthDays.length));\n      var nextMonth = dayjs(\"\".concat(this.year, \"-\").concat(this.month, \"-01\")).add(1, \"month\");\n      var visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday ? 7 - lastDayOfTheMonthWeekday : lastDayOfTheMonthWeekday;\n      return _toConsumableArray(Array(visibleNumberOfDaysFromNextMonth)).map(function (day, index) {\n        return {\n          date: dayjs(\"\".concat(nextMonth.year(), \"-\").concat(nextMonth.month() + 1, \"-\").concat(index + 1)).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: false\n        };\n      });\n    }\n  },\n  methods: {\n    getWeekday: function getWeekday(date) {\n      return dayjs(date).weekday();\n    },\n    getEventsByDate: function getEventsByDate(date) {\n      var result = this.events.filter(function (event) {\n        return dayjs(event.date).format('YYYY-MM-DD') === date;\n      });\n      return result;\n    },\n    selectDate: function selectDate(newSelectedDate) {\n      this.selectedDate = newSelectedDate;\n    }\n  }\n};",{"version":3,"sources":["CalendarMonth.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"calendar-month\">\n    <div class=\"calendar-month-header\">\n      <CalendarDateIndicator\n        :selected-date=\"selectedDate\"\n        class=\"calendar-month-header-selected-month\"\n      />\n\n      <CalendarDateSelector\n        :current-date=\"today\"\n        :selected-date=\"selectedDate\"\n        @dateSelected=\"selectDate\"\n      />\n    </div>\n\n    <CalendarWeekdays/>\n\n    <ol class=\"days-grid\">\n      <CalendarMonthDayItem\n        v-for=\"day in days\"\n        :key=\"day.date\"\n        :day=\"day\"\n        :is-today=\"day.date === today\"\n        :events=\"getEventsByDate(day.date)\"\n      />\n    </ol>\n  </div>\n</template>\n\n<script>\nimport dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\nimport CalendarDateSelector from \"./CalendarDateSelector\";\nimport CalendarWeekdays from \"./CalendarWeekdays\";\n\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\n\nexport default {\n  name: \"CalendarMonth\",\n\n  components: {\n    CalendarMonthDayItem,\n    CalendarDateIndicator,\n    CalendarDateSelector,\n    CalendarWeekdays\n  },\n\n  props: ['events'],\n\n  data() {\n    return {\n      selectedDate: dayjs()\n    };\n  },\n\n  computed: {\n    days() {\n      return [\n        ...this.previousMonthDays,\n        ...this.currentMonthDays,\n        ...this.nextMonthDays\n      ];\n    },\n\n    today() {\n      return dayjs().format(\"YYYY-MM-DD\");\n    },\n\n    month() {\n      return Number(this.selectedDate.format(\"M\"));\n    },\n\n    year() {\n      return Number(this.selectedDate.format(\"YYYY\"));\n    },\n\n    numberOfDaysInMonth() {\n      return dayjs(this.selectedDate).daysInMonth();\n    },\n\n    currentMonthDays() {\n      return [...Array(this.numberOfDaysInMonth)].map((day, index) => {\n        return {\n          date: dayjs(`${this.year}-${this.month}-${index + 1}`).format(\n            \"YYYY-MM-DD\"\n          ),\n          isCurrentMonth: true\n        };\n      });\n    },\n\n    previousMonthDays() {\n      const firstDayOfTheMonthWeekday = this.getWeekday(\n        this.currentMonthDays[0].date\n      );\n      const previousMonth = dayjs(`${this.year}-${this.month}-01`).subtract(\n        1,\n        \"month\"\n      );\n\n      // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\n      const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday\n        ? firstDayOfTheMonthWeekday - 1\n        : 6;\n\n      const previousMonthLastMondayDayOfMonth = dayjs(\n        this.currentMonthDays[0].date\n      )\n        .subtract(visibleNumberOfDaysFromPreviousMonth, \"day\")\n        .date();\n\n      return [...Array(visibleNumberOfDaysFromPreviousMonth)].map(\n        (day, index) => {\n          return {\n            date: dayjs(\n              `${previousMonth.year()}-${previousMonth.month() +\n                1}-${previousMonthLastMondayDayOfMonth + index}`\n            ).format(\"YYYY-MM-DD\"),\n            isCurrentMonth: false\n          };\n        }\n      );\n    },\n\n    nextMonthDays() {\n      const lastDayOfTheMonthWeekday = this.getWeekday(\n        `${this.year}-${this.month}-${this.currentMonthDays.length}`\n      );\n\n      const nextMonth = dayjs(`${this.year}-${this.month}-01`).add(1, \"month\");\n\n      const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\n        ? 7 - lastDayOfTheMonthWeekday\n        : lastDayOfTheMonthWeekday;\n\n      return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\n        return {\n          date: dayjs(\n            `${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`\n          ).format(\"YYYY-MM-DD\"),\n          isCurrentMonth: false\n        };\n      });\n    }\n  },\n\n  methods: {\n    getWeekday(date) {\n      return dayjs(date).weekday();\n    },\n\n    getEventsByDate(date) {      \n      const result = this.events.filter(event => dayjs(event.date).format('YYYY-MM-DD') === date)\n      return result\n    },\n\n    selectDate(newSelectedDate) {\n      this.selectedDate = newSelectedDate;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.calendar-month {\n  position: relative;\n  background-color: var(--grey-200);\n  border: solid 1px var(--grey-300);\n}\n\n.day-of-week {\n  color: var(--grey-800);\n  font-size: 18px;\n  background-color: #fff;\n  padding-bottom: 5px;\n  padding-top: 10px;\n}\n\n.day-of-week,\n.days-grid {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n.day-of-week > * {\n  text-align: right;\n  padding-right: 5px;\n}\n\n.days-grid {\n  height: 100%;\n  position: relative;\n  grid-column-gap: var(--grid-gap);\n  grid-row-gap: var(--grid-gap);\n  border-top: solid 1px var(--grey-200);\n}\n</style>\n"],"sourceRoot":"src/components"}]}